# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  emails-queue-api

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  Subdomain:
    Type: String
    Default: emails-queue-api
    AllowedValues:
      - emails-queue-api
      - emails-queue-api-test
    Description: Subdomain to use for API

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: v1
      Auth:
        ApiKeyRequired: true # sets for all methods
        UsagePlan:
          CreateUsagePlan: PER_API
          Description: Usage plan for emails-queue-api
      Domain:
        DomainName: !Sub ${Subdomain}.bowland.link
        CertificateArn: arn:aws:acm:us-east-1:494887012091:certificate/7f4606f7-302c-40a8-ac9d-e63db9b7a712
        EndpointConfiguration: EDGE
        Route53:
          HostedZoneId: Z01312547RGU1BYKIJXY
        BasePath:
          - /v1

  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-all-items.js
  postItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/post-item.postItem
      CodeUri: './dist'
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 30
      Description: Adds emails to the queue to be sent.
      Policies:
        # Give Lambda basic execution Permission
        - AWSLambdaBasicExecutionRole
        # Grant access to S3 bucket
        - S3WritePolicy:
            BucketName: emails-service-storage
        # Grant access to SQS queue
        - SQSSendMessagePolicy:
            QueueName: emails-queue-service-SimpleQueue-1S70UGPUYHOUI.fifo
      Environment:
        Variables:
          EMAIL_BUCKET: emails-service-storage
          EMAIL_REGION: us-east-1
          SQS_MESSAGE_QUEUE_ID: emails
          SQS_QUEUE_URL: 'https://sqs.us-east-1.amazonaws.com/494887012091/emails-queue-service-SimpleQueue-1S70UGPUYHOUI.fifo'
      Events:
        ApiKey:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /emails
            Method: post
            Auth:
              ApiKeyRequired: true

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [postItemFunction]
    Properties:
      LogGroupName: !Sub /aws/lambda/${postItemFunction}
      RetentionInDays: 30
